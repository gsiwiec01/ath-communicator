<UserControl x:Class="AthChat.Client.Views.ChatView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:AthChat.Client.Views"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:Converters="clr-namespace:MaterialDesignThemes.Wpf.Converters;assembly=MaterialDesignThemes.Wpf"
             Background="{DynamicResource MaterialDesignPaper}"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True}"
             d:DesignHeight="400" d:DesignWidth="650">
    <UserControl.Resources>
        <Style x:Key="SendButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueDarkBrush}" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="FontWeight" Value="Medium" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="#00000000">
                            <materialDesign:PackIcon Name="SendIcon" Kind="Send" SnapsToDevicePixels="True"
                                                     Foreground="{TemplateBinding Foreground}"
                                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Margin="{TemplateBinding Padding}" Width="Auto" Height="Auto" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="SendIcon"
                                        Value="{DynamicResource PrimaryHueMidBrush}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Foreground" TargetName="SendIcon"
                                        Value="{DynamicResource PrimaryHueMidBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ImageButtonStyle" TargetType="Button" BasedOn="{StaticResource SendButtonStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="#00000000">
                            <materialDesign:PackIcon Name="PhotoIcon" Kind="Image" SnapsToDevicePixels="True"
                                                     Foreground="{TemplateBinding Foreground}"
                                                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                     Margin="{TemplateBinding Padding}" Width="Auto" Height="Auto" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" TargetName="PhotoIcon"
                                        Value="{DynamicResource PrimaryHueMidBrush}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Foreground" TargetName="PhotoIcon"
                                        Value="{DynamicResource PrimaryHueMidBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.23" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ParticipantsListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment"
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding" Value="2,0,0,0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter Grid.Column="1"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#E3F2FD" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true" />
                                    <Condition Property="Selector.IsSelectionActive" Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="#E3F2FD" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid Background="#F5F5F5">
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="220" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Border Grid.RowSpan="2" BorderThickness="0,0,1,0" SnapsToDevicePixels="True"
                BorderBrush="{DynamicResource MaterialDesignDivider}">
            <ListBox ItemsSource="{Binding Participants}"
                     ItemTemplate="{DynamicResource ParticipantsDataTemplate}"
                     ItemContainerStyle="{DynamicResource ParticipantsListBoxItemStyle}"
                     SelectedItem="{Binding SelectedParticipant}"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.VerticalScrollBarVisibility="Auto" />
        </Border>

        <ItemsControl x:Name="MessagesItemsCtrl" Grid.Column="1" Margin="0,5,0,0"
                      ItemsSource="{Binding SelectedParticipant.Chatter}"
                      ItemTemplate="{DynamicResource MessagesDataTemplate}"
                      ScrollViewer.VerticalScrollBarVisibility="Auto">
            <i:Interaction.Behaviors>
            </i:Interaction.Behaviors>
            <ItemsControl.Template>
                <ControlTemplate TargetType="ItemsControl">
                    <ScrollViewer>
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </ItemsControl.Template>
        </ItemsControl>

        <Border Grid.Row="1" Grid.Column="1" SnapsToDevicePixels="True"
                BorderBrush="{DynamicResource MaterialDesignDivider}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <!--Message-->
                <Border Margin="10,10,0,10" MaxHeight="80"
                        BorderThickness="1" BorderBrush="{DynamicResource MaterialDesignDivider}">
                    <TextBox x:Name="MessageTxtBox" BorderBrush="Transparent"
                             TextWrapping="Wrap" AcceptsReturn="True" CaretBrush="#7F000000"
                             VerticalScrollBarVisibility="Auto"
                             Text="{Binding TextMessage, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="KeyUp">
                                <i:InvokeCommandAction Command="{Binding TypingCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBox>
                </Border>
                <Button x:Name="SendButton" Grid.Column="1" Margin="10"
                        Style="{DynamicResource SendButtonStyle}"
                        Command="{Binding SendTextMessageCommand}" />
            </Grid>
        </Border>
    </Grid>
</UserControl>